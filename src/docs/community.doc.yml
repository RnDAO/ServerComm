paths:
  /api/v1/communities/:
    post:
      tags:
        - Community
      summary: Create a new community.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                avatarURL:
                  type: string
                tcaAt:
                  type: string
                  format: date-time
                  description: term and condition accepted date 
              example:
                name: community
                avatarURL: path
                tcaAt: 2023-10-31T12:48:55.432Z
      responses:
        "201":
          description: Community created successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Community"
        "400":
          description: Bad Request
          $ref: "#/components/responses/BadRequest"
        "401":
          description: Unauthorized
          $ref: "#/components/responses/Unauthorized"
        "404":
          description: NotFound
          $ref: "#/components/responses/NotFound"
        
    get:
      tags:
        - Community
      summary: Retrieve all communities.
      description: Retrieve all communities that user has any role on it
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: name
          schema:
            type: string
          description: community name
        - in: query
          name: sortBy
          schema:
            type: string
          description: sort by query in the form of field:desc/asc (ex. name:asc)
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            default: 10
          description: Maximum number of communities
        - in: query
          name: page
          schema:
            type: integer
            minimum: 1
            default: 1
          description: Page number
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      $ref: "#/components/schemas/Community"
                  page:
                    type: integer
                    example: 1
                  limit:
                    type: integer
                    example: 10
                  totalPages:
                    type: integer
                    example: 1
                  totalResults:
                    type: integer
                    example: 1
        "400":
          description: Bad Request
          $ref: "#/components/responses/BadRequest"
        "401":
          description: Unauthorized
          $ref: "#/components/responses/Unauthorized"


  /api/v1/communities/{communityId}:
    get:
      tags:
        - Community
        - Admin
        - View
      summary: Retrieve details of a specific community by its ID.
      security:
        - bearerAuth: []
      parameters:
        - name: communityId
          in: path
          required: true
          description: The ID of the community to retrieve.
          schema:
            type: string
      responses:
        "200":
          description: Community details retrieved successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Community"
        "400":
          description: Bad Request
          $ref: "#/components/responses/BadRequest"
        "401":
          description: Unauthorized
          $ref: "#/components/responses/Unauthorized"
        "404":
          description: NotFound
          $ref: "#/components/responses/NotFound"



    patch:
      tags:
        - Community
        - Admin
      summary: Update a specific community by its ID.
      security:
        - bearerAuth: []
      parameters:
        - name: communityId
          in: path
          required: true
          description: The ID of the community to update.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                avatarURL:
                  type: string
                tcaAt:
                  type: string
                  format: date-time
                  description: term and condition accepted date 
      responses:
        "200":
          description: Community updated successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Community"
        "400":
          description: Bad Request
          $ref: "#/components/responses/BadRequest"
        "401":
          description: Unauthorized
          $ref: "#/components/responses/Unauthorized"
        "404":
          description: NotFound
          $ref: "#/components/responses/NotFound"



    delete:
      tags:
        - Community
        - Admin
      summary: Delete a specific community by its ID.
      security:
        - bearerAuth: []
      parameters:
        - name: communityId
          in: path
          required: true
          description: The ID of the community to delete.
          schema:
            type: string
      responses:
        "204":
          description: Community deleted successfully.
        "401":
          description: Unauthorized
          $ref: "#/components/responses/Unauthorized"
        "404":
          description: NotFound
          $ref: "#/components/responses/NotFound"


