components:
  schemas:
    # ********User********
    User:
      type: object
      description: Details about a user.
      properties:
        id:
          type: string
          format: objectId 
        discordId:
          type: string
          format: Snowflake
          description: The unique ID of the user on Discord.
        email:
          type: string
          format: email
          description: The email associated with the user.
        communities:
          type: array
          items:
            type: string
            description: Mongoose ObjectId representing community IDs associated with the user.
        tcaAt:
          type: string
          format: date-time
          description: term and condition accepted date 
        unverifiedTelegramUsername:
          type: string
          description: unverified telegram username
    # ********Community********
    Community:
      type: object
      description: Details about a community.
      properties:
        id:
          type: string
          format: objectId 
        name:
          type: string
          description: Name of the community.
        avatarURL:
          type: string
          description: URL to the community's avatar.
        users:
          type: array
          items:
            type: string
            description: Mongoose ObjectId representing user IDs part of the community.
        platforms:
          type: array
          items:
            type: string
            description: Mongoose ObjectId representing platform IDs associated with the community.
        tcaAt:
          type: string
          format: date-time
          description: term and condition accepted date 
        connectedAt:
          type: string
          format: date-time
          description: connected date 
        disconnectedAt:
          type: string
          format: date-time
          description: disconnected date 
        roles:  
          type: array
          description: Roles associated with the community.
          items:
            type: object
            properties:
              roleType:
                type: string
                enum: ['view', 'admin']
                description: Type of the role.
              source:
                type: object
                properties:
                  platform:
                    type: string
                    enum: ['discord']
                    description: Platform of the source.
                  identifierType:
                    type: string
                    enum: ['member', 'role']
                    description: Type of identifier used in the platform.
                  identifierValues:
                    type: array
                    items:
                      type: string
                    description: Values of the identifiers.
                  platformId:
                    type: string
                    format: objectId
                    description: ObjectId representing the platform ID.
    # ********Platform********
    Platform:
      type: object
      description: Details about a platform.
      properties:
        id:
          type: string
          format: objectId 
        name:
          type: string
          description: Name of the platform.
        community:
          type: string
          description: Mongoose ObjectId of the associated community.
        metadata:
          type: object
          additionalProperties: true
          description: Dynamic metadata related to the platform.
        disconnectedAt:
          type: string
          format: date-time
          nullable: true
          description: Date and time when the platform was disconnected.

    # ********Platform********
    Platform:
      type: object
      description: Details about a platform.
      properties:
        id:
          type: string
          format: objectId 
        name:
          type: string
          description: Name of the platform.
        community:
          type: string
          description: Mongoose ObjectId of the associated community.
        metadata:
          type: object
          additionalProperties: true
          description: Dynamic metadata related to the platform.
        disconnectedAt:
          type: string
          format: date-time
          nullable: true
          description: Date and time when the platform was disconnected.

    # ********Token********
    Token:
      type: object
      description: Details about a token.
      properties:
        id:
          type: string
          format: objectId 
        token:
          type: string
          description: Token string.
        user:
          type: string
          format: Snowflake
          description: The unique ID of the user associated with this token.
        type:
          type: string
          description: Type of the token.
        expires:
          type: string
          format: date-time
          description: Expiry date of the token.
        blacklisted:
          type: boolean
          description: Flag indicating if the token is blacklisted.

    # ********Error********
    Error:
      type: object
      properties:
        code:
          type: number
        message:
          type: string


    # ********Role********
    Role:
      type: object
      properties:
        roleId:
          type: string
          format: Snowflake
        name:
          type: string
        color:
          type: integer
        deletedAt:
          type: string
          format: date-time
          nullable: true
        id:
          type: string
          format: objectId 


    # ********Channel********
    Channel:
      type: object
      properties:
        channelId:
          type: string
          format: Snowflake
        name:
          type: string
          nullable: true
        parentId:
          type: string
          nullable: true
        permissionOverwrites:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: Snowflake
              type:
                type: integer
                enum: [0, 1] # 0 for role, 1 for member
              allow:
                type: string
              deny:
                type: string
        deletedAt:
          type: string
          format: date-time
          nullable: true
        _id:
          type: string
          format: objectId # assuming MongoDB ObjectId format

    # ********Announcement********
    Announcement:
      type: object
      properties:
        id:
          type: string
          format: objectId
        title:
          type: string
        scheduledAt:
          type: string
          format: date-time
        draft:
          type: boolean
        data:
          type: array
          items:
            type: object
            properties:
              platform:
                type: string
                format: objectId
              template:
                type: string
              options:
                type: object
                properties:
                  users:
                    type: object
                    properties:
                      discordId: 
                        type: string
                      ngu: 
                        type: string
        community:
          type: string
          format: objectId

    # ********Category********
    Category:
      type: array
      items:
        type: string
